# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize
name: Build

on:
  push:
    tags: [ 'release-v*.*.*' ]
jobs:
  build:
    name: Build prod top-leader-fe
    runs-on: ubuntu-latest
    environment: prod
    strategy:
      matrix:
        node-version: [18.x]
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install -f

      - name: Build
        run: npm run build-github

      - name: Create Build Artifacts
#        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
          if-no-files-found: error

  deploy:
    name: Deploy prod top-leader-fe
#    if: github.ref == 'refs/heads/main'
    needs: [ build ]
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Cloud Authentication
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: DownloadBuild Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Display structure of downloaded files
        run: pwd & ls -l

      - name: Upload Build to Bucket
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          parent: false
          path: build
          destination: www.qa.topleaderplatform.io

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'

      - name: Invalidate CDN Cache
        run: gcloud compute url-maps invalidate-cdn-cache topleader-prod-lob --path "/*"

